#!/bin/sh

PROGRAM=$(basename $0)
#LOCK="${XDG_RUNTIME_DIR}/${PROGRAM}.lock"
LOCK_BASE_NAME="${XDG_RUNTIME_DIR}/${PROGRAM}-"
OUTPUT="${XDG_RUNTIME_DIR}/${PROGRAM}.out"
EXECUTABLE_DIR="${HOME}/.config/falko"

main() {
	# echo tick
	# execute all the executables found in dir and
	# concatenate their output
	[ -d "${EXECUTABLE_DIR}" ] || initialize
	for EXECUTABLE in ${EXECUTABLE_DIR}/* ; do
		[ -d "${EXECUTABLE}" ] && continue
		[ -x "${EXECUTABLE}" ] && {
			# ensure only one instance of this executable is running
			LOCK="${LOCK_BASE_NAME}$(basename ${EXECUTABLE}).lock"
			if ! mkdir "${LOCK}" ; then
				MESSAGE="${MESSAGE} — $(basename ${EXECUTABLE}) ☹ — "
				continue
			else
				MESSAGE="${MESSAGE}$(${EXECUTABLE} 2>&1) "
				rmdir "${LOCK}"
			fi
		}
	done
	# display concatenated output on a single line
	MESSAGE="$(echo ${MESSAGE} | tr '\n' ' ')"
	printout "${MESSAGE}"
}

printout() {
	printf -- "${1}" > "${OUTPUT}"
}

log() {
	echo "$@"
}

initialize() {
	log "'${EXECUTABLE_DIR}': directory not found!"
	log "Initializing ${PROGRAM}..."
	if ! mkdir -pv "${EXECUTABLE_DIR}" ; then
		printout "Cannot create ${EXECUTABLE_DIR}!"
		return 5
	fi
	cat > "${EXECUTABLE_DIR}/falko-example.sh" << EOF
#!/bin/sh

echo "falko"
EOF
	chmod -v +x "${EXECUTABLE_DIR}/falko-example.sh"
}

main $@
